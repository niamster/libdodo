
prefix:=@prefix@
datarootdir:=@datarootdir@
exec_prefix:=@exec_prefix@
mandir:=@mandir@
libdir:=@libdir@
bindir:=@bindir@
includedir:=@includedir@

CXX:=@CXX@
INSTALL:=@INSTALL@
LN_S = @LN_S@

CPPFLAGS:=-I./include @CPPFLAGS@
LDFLAGS:= -L./ @LDFLAGS@ -lrt
CFLAGS:=@CFLAGS@
DEFINES:=-D_REENTRANT -D_GNU_SOURCE -D__USE_UNIX98 -D_XOPEN_SOURCE=600 \
	-D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_THREAD_SAFE \
	@DEFS@

###########################################################

OBJECTS:=dbAccumulator.o \
	dbConnector.o \
	dbSqlConstructor.o \
	dbPostgresql.o \
	dbMysql.o \
	dbSqlite.o \
	tools.o \
	toolsFilesystem.o \
	toolsSystem.o \
	toolsTime.o \
	toolsNetwork.o \
	toolsString.o \
	json.o \
	jsonNode.o \
	types.o \
	xexec.o \
	baseEx.o \
	regexp.o \
	logger.o \
	ioChannel.o \
	ioFile.o \
	ioNonBlockedAccess.o \
	ioNonBlockedAccessInfo.o \
	ioStdio.o \
	ioNetworkHttp.o \
	ioNetworkOptions.o \
	ioNetworkExchange.o \
	ioNetworkServer.o \
	ioNetworkClient.o \
	xml.o \
	rpcValue.o \
	rpcMethod.o \
	rpcResponse.o \
	rpcClient.o \
	rpcServer.o \
	rpcXmlClient.o \
	rpcXmlHttpClient.o \
	rpcXmlServer.o \
	rpcXmlCgiServer.o \
	rpcXmlValue.o \
	rpcXmlMethod.o \
	rpcXmlResponse.o \
	image.o \
	systemRaceHazardGuard.o \
	systemAtomicLock.o \
	systemAtomicMutex.o \
	systemAtomicSemaphore.o \
	systemProcessCollection.o \
	systemThreadCollection.o \
	systemJobCollection.o \
	systemThreadGuard.o \
	systemProcessGuard.o \
	systemThreadSharedDataGuard.o \
	systemProcessSharedDataGuard.o \
	systemSharedDataGuard.o \
	systemSharedData.o \
	systemThreadSharedDataCollectionGuard.o \
	systemProcessSharedDataCollectionGuard.o \
	systemSharedDataCollectionGuard.o \
	systemLibraryLoader.o \
	cgiClient.o \
	cgiFastClient.o \
	cgiFastClientExchange.o \
	cgiPreprocessor.o \
	cgiProcessor.o

###########################################################

VPATH:=src/

all: @PACKAGE_NAME@

@PACKAGE_NAME@: $(OBJECTS)
	$(CXX) $(LDFLAGS) -shared -Wl,-soname,$@.so.@PACKAGE_VERSION@ -o $@.so.@PACKAGE_VERSION@ $(OBJECTS)
	if test "@DEBUG@" = "no"; then strip -d --strip-unneeded @PACKAGE_NAME@.so.@PACKAGE_VERSION@; fi
	ln -sf @PACKAGE_NAME@.so.@PACKAGE_VERSION@ $@.so
	
	@echo ""
	@echo ""
	@echo "Now you can run 'gmake install'."

.cc.o:
	$(CXX) $(DEFINES) $(CPPFLAGS) $(CFLAGS) -fPIC -c $^
	if test "@DEBUG@" = "no"; then strip -d --strip-unneeded $@; fi

install: @PACKAGE_NAME@ 
	${INSTALL} -m 755 -d $(libdir)
	${INSTALL} -m 755 @PACKAGE_NAME@.so.@PACKAGE_VERSION@ $(libdir)/
	${INSTALL} -m 755 -d $(includedir)/libdodo
	cd include/libdodo; for i in ./*; do ${INSTALL} -m 755 $$i $(includedir)/libdodo; done; cd ..

	${INSTALL} -m 755 -d $(bindir)
	${INSTALL} -m 755 bin/dodo-config $(bindir)/
	
	$(LN_S) -f $(libdir)/@PACKAGE_NAME@.so.@PACKAGE_VERSION@ $(libdir)/@PACKAGE_NAME@.so
	
	@echo ""
	@echo ""
	@echo "Use libdodo with pleasure"
	@echo ""
	@echo ""

uninstall:
	rm -f $(libdir)/@PACKAGE_NAME@.so.@PACKAGE_VERSION@
	rm -f $(libdir)/@PACKAGE_NAME@.so
	rmdir $(libdir)
	
	cd i$(ncludedir)/libdodo; for i in ./*; do rm -f $(includedir)/$$i; done; cd ..
	rmdir $(includedir)/libdodo
	rmdir $(includedir)

	rm -f $(bindir)/dodo-config
	rmdir $(bindir)/dodo-config
	
	rmdir $(prefix)
clean:
	rm -rf *.o *.so* *.a*

force : clean @PACKAGE_NAME@


prefix:=@prefix@
datarootdir:=@datarootdir@
exec_prefix:=@exec_prefix@
mandir:=@mandir@
libdir:=@libdir@
includedir:=@includedir@

CXX:=@CXX@
INSTALL:=@INSTALL@
LN_S = @LN_S@

CPPFLAGS:=-I./include @CPPFLAGS@
LDFLAGS:= -L./ @LDFLAGS@
LIBS:=@LIBS@
CFLAGS:=@CFLAGS@
DEFINES:=-D_REENTRANT -D_GNU_SOURCE -D__USE_UNIX98 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 @DEFS@

###########################################################

OBJECTS:=dbBase.o \
		atomicMutex.o \
		tools.o \
		types.o \
		stringTools.o \
		xexec.o \
		dbSqlBase.o \
		baseEx.o \
		dbMysql.o \
		cgi.o \
		regexp.o \
		flushSocketOptions.o \
		flushSocketExchange.o \
		flushSocketTools.o \
		flushSocket.o \
		flushDiskTools.o \
		flushDisk.o \
		flushSTD.o \
		systemTools.o \
		timeTools.o \
		xml.o \
		dbSqlite.o \
		systemProcesses.o \
		systemThreads.o \
		systemJobs.o \
		threadGuard.o \
		systemThreadSharedDataGuard.o \
		systemProcessSharedDataGuard.o \
		systemThreadSharedDataCollectionGuard.o \
		dbPostgresql.o \
		cgiPreprocessor.o \
		flush.o \
		dbInterface.o \
		cgiFast.o \
		cgiProcessor.o \
		flushNBA.o

###########################################################

VPATH:=src/

all: @PACKAGE_NAME@

@PACKAGE_NAME@: $(OBJECTS)
	$(CXX) $(LDFLAGS) $(LIBS) -shared -Wl,-soname,$@.so.@PACKAGE_VERSION@ -o $@.so.@PACKAGE_VERSION@ $(OBJECTS)
	if test "@DEBUG@" = "no"; then strip -d --strip-unneeded @PACKAGE_NAME@.so.@PACKAGE_VERSION@; fi
	ln -sf @PACKAGE_NAME@.so.@PACKAGE_VERSION@ $@.so
	
	@echo ""
	@echo ""
	@echo "Now you can run 'gmake install'."

.cc.o:
	$(CXX) $(DEFINES) $(CPPFLAGS) $(CFLAGS) -fPIC -c $^
	if test "@DEBUG@" = "no"; then strip -d --strip-unneeded $@; fi

install: 
	${INSTALL} -m 755 -d $(libdir)
	${INSTALL} -m 755 @PACKAGE_NAME@.so.@PACKAGE_VERSION@ $(libdir)/
	${INSTALL} -m 755 -d $(includedir)/libdodo
	cd include/libdodo; for i in ./*; do ${INSTALL} -m 755 $$i $(includedir)/libdodo; done; cd ..
	
	$(LN_S) -f $(libdir)/@PACKAGE_NAME@.so.@PACKAGE_VERSION@ $(libdir)/@PACKAGE_NAME@.so
	
	@echo ""
	@echo ""
	@echo "Use libdodo with pleasure"
	@echo ""
	@echo ""

uninstall:
	rm -f $(libdir)/@PACKAGE_NAME@.so.@PACKAGE_VERSION@
	rm -f $(libdir)/@PACKAGE_NAME@.so
	rmdir $(libdir)
	
	cd i$(ncludedir)/libdodo; for i in ./*; do rm -f $(includedir)/$$i; done; cd ..
	rmdir $(includedir)/libdodo
	rmdir $(includedir)
	
	rmdir $(prefix)
clean:
	rm -rf *.o *.so* *.a*

force : clean @PACKAGE_NAME@

class LibdodoHg(CPackageRecipe):

	name = 'libdodo-hg'
	version = '<version>'

	buildRequires = ['gcc-c++:runtime', 'autoconf:runtime', 'which:runtime', 'tcp_wrappers:devellib']

	def setup(r):
		r.addArchive('http://hg.libdodo.org/archive/%(version)s.tar.bz2')

		extraconfig = ''	

		if Use.deque:
			extraconfig +=' --enable-deque'
		else:
			extraconfig +=' --disable-deque'

		if Use.ioXexec:
			extraconfig +=' --enable-io-xexec'
		else:
			extraconfig +=' --disable-io-xexec'

		if Use.graphicsXexec:
			extraconfig +=' --enable-graphics-xexec'
		else:
			extraconfig +=' --disable-graphics-xexec'

		if Use.databaseXexec:
			extraconfig +=' --enable-database-xexec'
		else:
			extraconfig +=' --disable-database-xexec'

		if Use.sqlite3:
			r.buildRequires += ['sqlite:devel']
			extraconfig +=' --with-sqlite3'

		if Use.postgresql:
			r.buildRequires += ['postgresql:devel']
			extraconfig +=' --with-postgresql'

		if Use.mysql:
			r.buildRequires += ['mysql:devel']
			extraconfig +=' --with-mysql'

		if Use.ssl:
			r.buildRequires += ['openssl:devel']
			extraconfig +=' --with-openssl'

		if Use.fastcgi:
			r.buildRequires += ['fcgi:devel']
			extraconfig +=' --with-fast-cgi'

		if Use.pcre:
			r.buildRequires += ['pcre:devel']
			extraconfig +=' --with-pcre'

		if Use.dl:
			extraconfig +=' --enable-dl'

		if Use.libxml2:
			r.buildRequires += ['libxml2:devel']
			extraconfig +=' --with-libxml2'

		if Use.bzip2:
			r.buildRequires += ['bzip2:devel']
			extraconfig +=' --with-bzip2'

		if Use.zlib:
			r.buildRequires += ['zlib:devel']
			extraconfig +=' --with-zlib'

		if Use.iconv:
			extraconfig +=' --with-iconv'

		if Use.imagemagick:
			r.buildRequires += ['ImageMagick:devel']
			extraconfig +=' --with-imagemagick'

		if Use.bfd:
			r.buildRequires += ['binutils:devel']
			extraconfig +=' --with-bfd'

		if Use.ipcxsi:
			extraconfig +=' --with-ipc=XSI'

		r.Replace('0.11.0', '%s' % r.version, 'trunk/configure.in')
		r.Run('autoconf', dir='trunk')

		r.Configure(extraconfig, dir='trunk')

		r.Make(dir='trunk')
		r.Make(dir='trunk/tests')
		r.Install('trunk/libdodo.so.%(version)s','%(libdir)s/')
		r.Symlink('%(libdir)s/libdodo.so.%(version)s','%(libdir)s/libdodo.so')
		r.Install('trunk/include/','%(includedir)s/libdodo/')
